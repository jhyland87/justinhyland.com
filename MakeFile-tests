#!/usr/bin/make -f
SHELL = /bin/bash

OS := $(shell uname)
#bin_list := npm node
bin_list := node npm ls
bin_paths := $(foreach bin,$(bin_list),$(shell which $(bin)))
#bin_list_count := $(strip $(shell echo $(bin_list) | wc -w))
#bin_path_count := $(strip $(shell echo $(bin_paths) | wc -w))
bin_list_count := $(words $(bin_list))
bin_path_count := $(words $(bin_paths))

verify_all: verify_node verify_npm

verify_npm: 
	@which npm > /dev/null

verify_node: 
	@which node > /dev/null

define say_something
    echo "You said "$(1)
endef

check: verify_all

verify:
ifeq ($(shell test $(bin_list_count) -gt $(bin_path_count); echo $$?),0)
	@echo "Not all bins found"
else
	@echo "All bins found"
endif
	@echo "Bins: $(bin_list_count)"
	@echo "Paths: $(bin_path_count)"

all: test_b
	echo "This is all"
	$(call say_something, FOO)
	$(call say_something, BAR)

test_b: npm_install
	echo "This is test_b"

npm_install: package.json
	$(which npm)
	cp -v package.json package-2.json

test_c: package.json check
	echo "test_c executed"

test_d: verify

test_e: 
	NPM_VERSION = $(shell npm --version 2>/dev/null)
	ifdef $(NPM_VERSION)
		@echo "Found npm version $(NPM_VERSION)"
	else
		@echo "No npm version found"
	endif

test_f:
	foo = true
	ifdef $(foo)
		@echo "foo is defined"
	else
		@echo "foo is NOT defined"
	endif

get_os:
	ifeq $(OS) Darwin
		@echo "OS: $(OS)"
	else
		@echo "no OS"
	endif

looper:
ifneq ($(bins),)
	@echo "Binarys: $(bins)"
else
	@echo "NOPE"
endif

.PHONY: test_f

